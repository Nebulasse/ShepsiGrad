#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node clean-and-restart.js
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –∫—ç—à–∞...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
function runCommand(command, description) {
  try {
    console.log(`üìã ${description}...`);
    execSync(command, { stdio: 'inherit' });
    console.log(`‚úÖ ${description} –∑–∞–≤–µ—Ä—à–µ–Ω–æ`);
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ ${description}:`, error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–ø–æ–∫
function removeDirectory(dirPath, description) {
  if (fs.existsSync(dirPath)) {
    try {
      console.log(`üóëÔ∏è  ${description}...`);
      fs.rmSync(dirPath, { recursive: true, force: true });
      console.log(`‚úÖ ${description} —É–¥–∞–ª–µ–Ω–æ`);
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ${description}:`, error.message);
    }
  } else {
    console.log(`‚ÑπÔ∏è  ${description} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
  }
}

// –û—á–∏—â–∞–µ–º –∫—ç—à Expo
runCommand('npx expo start --clear', '–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Expo');

// –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫–∏ –∫—ç—à–∞
removeDirectory(path.join(__dirname, '.expo'), '–ü–∞–ø–∫–∞ .expo');
removeDirectory(path.join(__dirname, 'node_modules'), '–ü–∞–ø–∫–∞ node_modules');

// –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
runCommand('npm install', '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');

console.log('üöÄ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π:');
console.log('npm start'); 